create database jupiter_packing;

use jupiter_packing;

create table Customer(
         customer_id varchar(10) primary key,
         customer_name varchar(30),
         address varchar(50),
         contact int(10)
         );

create table Orders(
        order_id varchar(10) primary key,
        customer_id varchar(10),
        date Date,
        payment double(5,2),
        foreign key(customer_id)references Customer(customer_id) on delete cascade on update cascade
        );

create table Product(
        product_id varchar(10) primary key,
        product_name varchar(30),
        unit_price double(5,2)
        );

create table Order_Details(
       order_id varchar(10),
       product_id varchar(10),
       qty int(10),
       foreign key(order_id)references Orders(order_id) on delete cascade on update cascade,
       foreign key(product_id)references Product(product_id) on delete cascade on update cascade
       );

create table Raw_Material(
       material_id varchar(10)primary key,
       material_name varchar(30),
       unit_price double(5,2)
       );

create table Product_Details(
       product_id varchar(10),
       material_id varchar(10),
       foreign key(product_id)references Product(product_id) on delete cascade on update cascade,
       foreign key(material_id)references Raw_Material(material_id) on delete cascade on update cascade
       );

create table Supplier(
       supplier_id varchar(10)primary key,
       supplier_name varchar(30),
       address varchar(50),
       contact int(10)
       );

create table Material_Details(
       material_order_id varchar(10) primary key,
       material_id varchar(10),
       supplier_id varchar(10),
       qty int(10),
       payment double(8,2),
       date Date,
       foreign key(material_id)references Raw_Material(material_id) on delete cascade on update cascade,
       foreign key(supplier_id)references Supplier(supplier_id) on delete cascade on update cascade
       );

create table Employee(
       employee_id varchar(10)primary key,
       employee_name varchar(30),
       NIC varchar(15),
       address varchar(50),
       contact int(10),
       salary double(5,2),
       section varchar(20)
       );

create table Attendance(
       attendance_id varchar(10)primary key,
       employee_id varchar(10),
       date Date,
       in_time varchar(10),
       off_time varchar(10),
       foreign key(employee_id)references Employee(employee_id) on delete cascade on update cascade
       );

create table Vehicle(
       vehicle_id varchar(10)primary key,
       employee_id varchar(10),
       vehicle_number int(20),
       model varchar(30),
       foreign key(employee_id)references Employee(employee_id) on delete cascade on update cascade
       );

create table Delivery(
       delivery_id varchar(10)primary key,
       order_id varchar(10),
       vehicle_id varchar(10),
       date Date,
       status varchar(20),
       foreign key(vehicle_id)references Vehicle(vehicle_id) on delete cascade on update cascade,
       foreign key(order_id)references Orders(order_id) on delete cascade on update cascade
       );

create table Users(
       user_id varchar(10)primary key,
       username varchar(20),
       password varchar(20),
       email varchar(50)
       );


Bil-:

select o.order_id,o.payment,c.customer_id,c.customer_name,od.product_id,od.qty,od.unit_price,p.product_name,sum(od.qty*od.unit_price) as total from
      Customer c
      join Orders o on c.customer_id = o.customer_id
      join Order_Details od on o.order_id = od.order_id
      join Product p on p.product_id = od.product_id
      group by o.order_id,c.customer_id,od.product_id,od.qty,od.unit_price
      order by od.order_id;